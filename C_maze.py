maze = {
    '00' : ['01','10'],
    '01' : ['00','02'],
    '02' : ['01','12'],
    '03' : ['04','13'],
    '04' : ['03','05'],
    '05' : ['04','15'],
    '06' : ['16','07'],
    '07' : ['06','08'],
    '08' : ['07','09'],
    '09' : ['08','19'],
    '10' : ['00','20'],
    '11' : ['12'],
    '12' : ['11','02'],
    '13' : ['03','14'],
    '14' : ['13','24'],
    '15' : ['05','16'],
    '16' : ['06','15','26'],
    '17' : ['27'],
    '18' : ['19','28'],
    '19' : ['09','18'],
    '20' : ['10','21'],
    '21' : ['20','31'],
    '22' : ['23','32'],
    '23' : ['22'],
    '24' : ['14','25','34'],
    '25' : ['24','35'],
    '26' : ['16','27'],
    '27' : ['17'],
    '28' : ['18','38'],
    '29' : ['39'],
    '30' : ['31','40'],
    '31' : ['30','32'],
    '32' : ['22','31'],
    '33' : ['34','43'],
    '34' : ['24','33','44'],
    '35' : ['25','36'],
    '36' : ['35'],
    '37' : ['38','47'],
    '38' : ['28','37','39'],
    '39' : ['29','38'],
    '40' : ['30','41'],
    '41' : ['40','42'],
    '42' : ['41','43'],
    '43' : ['33','42'],
    '44' : ['34','45'],
    '45' : ['44'],
    '46' : ['47'],
    '47' : ['37','46','48'],
    '48' : ['47','49'],
    '49' : ['48'],
}

def solve_maze(g, start, end):   
    qu = []
    done = set()

    qu.append(start) # 탐색을 시작할 정점 붙이기 
    done.add(start) # 시작 정점은 들렸음 

    print(qu)
    
    while qu: #큐만큼 반복 -> BFS? 
        v = qu.pop(0) # 꺼낸다.
        for x in maze[v]:
            if x not in done: # 아직 큐에 추가된 적이 없는 꼭짓점을
                qu.extend(x) # 이동 경로에 새 꼭짓점으로 추가하여 큐에 저장하고 
                done.append(v) # 집합에도 추가
# 탐색을 마칠 때까지 도착점이 나오지 않으면 나갈 수 없는 미로임
    return done

#2demension 
print(solve_maze(maze, '00', '49'))   
